Let ( [
	nameCur = GetValue ( names ; rep ) ;
	nameChar1 = Left ( nameCur ; 1 ) ;
	scope =
		Case (
			nameChar1 ≠ "$" ; 
				defaultScopePrefix & If ( nameChar1 ≠ "_" ; "_" )
		) ;
	varName = scope & nameCur ;
	varValue = #Value ( encodedString ; nameCur )
	];
	Evaluate ( "Let([ " & varName & " = " & Quote ( varValue ) & " ]; \"\" )" ) &
	Case (
		rep < ValueCount ( names ) ;
			#ToVariablesLoop ( encodedString ; names ; defaultScopePrefix ; rep + 1 ) ;
		0
	)
)

/* __________________________________________________

NAME:		#ToVariablesLoop ( encodedString ; names ; defaultScopePrefix ; rep )
PURPOSE:	Sets values from hash to variables by same names.
EXAMPLES:
	Where $_hash = "<:$$_animal:=dog:><:error:=0:>"
	
	#ToVariables ( $_hash ; "$$_animals" ; "$" ; 1 ) = 0
	Producing variables $$_animals
	
	#ToVariables ( $_hash ; "" ; "$" ; 1 ) = 0
	Producing variables $$_animals, $_error
	
	NOTES:
	Name parameter is optional.  If missing, function will iterate thru all name-value pairs at root level.
HISTORY:
	Created:	2011-04-29 20:26 PST - Donovan A. Chandler
*/