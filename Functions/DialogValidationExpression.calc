Case (
	
	//---- DATE AND TIME ----
	type = "DATE" ;
		"^([0-9]{1,2})[./-]([0-9]{1,2})[./-]([0-9]{2}|[0-9]{4})$" ;
		
	type = "DATE_TIME" ;
		"^(19[0-9]{2}|[2-9][0-9]{3})-((0(1|3|5|7|8)|10|12)-(0[1-9]|1[0-9]|2[0-9]|3[0-1])|(0(4|6|9)|11)-(0[1-9]|1[0-9]|2[0-9]|30)|(02)-(0[1-9]|1[0-9]|2[0-9])) (0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$" ;
		
	type = "DAY_OF_MONTH" ;
		"^((0?[1-9])|((1|2)[0-9])|30|31)$" ;
		
	type = "DAY_OF_WEEK" ; // Date of week or abbrev
		"^(Sun|Mon|(T(ues|hurs))|Fri)(day|\.)?$|^Wed(\.|nesday)?$|^Sat(\.|urday)?$|^T((ue?)|(hu?r?))\.?$" ;
		
	type = "HOUR" ;
		"^([0-1][0-9]|2[0-3]):[0-5][0-9]$" ;

	type = "TIME" ;
		"([1-9]|0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){1,2}( (AM|PM|am|pm))?$" ;
		
	//---- ADDRESS ----
	
	type = "EMAIL" ;
		"^([a-zA-Z0-9][a-zA-Z0-9_\-\.]*)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" ;
	
	type = "PHONE" ;
		"^((1[- \.]?)?\([0-9]{3}\)[- \.]?|(1[- \.])?[0-9]{3}[- \.])?[0-9]{3}[- \.][0-9]{4}$" ;
		
	type = "PHONE_INTERNATINAL" ;
		"^[+][0-9]{1,3}([.-]?[0-9]){3,12}$" ;
		
	type = "POSTAL_CODE_CA" ;
		"^[A-Z][0-9][A-Z][ -][0-9][A-Z][0-9]$" ;
		
	type = "STATE_ABBREV" ;
		"^(A[LKSZRAP]|C[AOT]|D[EC]|F[LM]|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[ARW]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" ;
		
	type = "STREET" ;
		"^[0-9]{1,3}.?[0-9]{0,3} [a-zA-Z]{2,30} [a-zA-Z]{2,15}$" ;
	
	type = "URL" ;
		"^((ht|f)tp(s?))://([0-9a-zA-Z]+\.)+[a-zA-Z]{2,6}(/[0-9a-zA-Z/]*|(:[0-9]+)?)$" ;
	
	type = "ZIP" ;
		"^[0-9]{5}([- /]?[0-9]{4})?$" ;

	//---- NAME ----
	
	type = "NAME" ;
		"^([A-Z][a-zA-Z '-]*)( [A-Z][a-zA-Z '.-]*)? ([A-Za-z][a-zA-Z '-]*)$" ;
	
	type = "NAME_FIRST" ;
		"^([A-Z][a-zA-Z '-]*)$" ;
		
	type = "NAME_LAST" ;
		"^([A-Za-z][a-zA-Z '-]*)$" ;

	//---- OTHER ----
	type = "DECIMAL_2" ; // Allows up to two decimal places
		"^([-]?)(0|[1-9][0-9]*)([.,][0-9]{1,2})?$" ;
	
	type = "INTEGER" ;
		"^(0|[-+]?[1-9][0-9]*)$" ;
	
	type = "NUMBER" ;
		"^[1-9][0-9]*$"
)

/* __________________________________________________

NAME:	DialogValidationExpression ( type )
PURPOSE:	Returns regular expression for validating user input.
EXAMPLES:
	DialogValidationExpression ( "NUMBER" ) = "^[1-9][0-9]*$"
NOTE:
	BEWARE, invalid regular expressions may cause Simple Dialog to freeze!
HISTORY:
	Created:	2010-10-04 11:55 PST - Donovan A. Chandler
*/