Let ([
	pathList = Substitute ( path ; "/" ; ¶ ) ;
	nodeCount = ValueCount ( pathList ) ;
	node = GetValue ( pathList ; nodeCount ) ;
	nodeSearch = "<:" & node & ":=" ;
	encodeLevel = nodeCount - 1 ;
	nodeEncodedList =
		ListCustom (
			1 ;
			encodeLevel ;
			"Let ([ " &
			"$string = If ( [n] > 1 ; $string ; " & Quote ( nodeSearch ) & " ) ; " &
			"$string = #Encode ( $string ) " &
			"]; $string )"
		) ;
	nodeEncoded = GetValue ( nodeEncodedList ; encodeLevel )
	] ;
	PatternCount ( encodedString ; nodeEncoded )
)
  
/* —————————————————————————————— //
NAME:
	#ValueCountPath ( encodedString ; path )

PURPOSE:
	Counts total occurrences of last node in path (searching in encodedString).

EXAMPLES:
	For $_text =
		# ( "GRANDPARENT" ;
			# ( "PARENT" ; # ( "CHILD" ; "foo" ) ) &
			# ( "PARENT" ; # ( "CHILD" ; "" ) )
		)
		
	#ValueCountPath ( $_text ; "GRANDPARENT/PARENT/CHILD" )

HISTORY:
	Created: 2011-Feb-07 09h43 PST — Donovan A. Chandler
*/