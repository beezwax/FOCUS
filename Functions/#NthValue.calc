Let ( [
	match = "<:" & #Encode ( name ) & ":=" ;
	pStart = Position ( encodedString ; match ; 1 ; rep ) ;
	start = pStart + Length ( match ) ;
	end = Position ( encodedString ; ":>" ; start ; 1 ) ;
	stringLength = Case ( end = 0 ; 999999999 ; end - start )
	] ;

	Case ( 
		pStart = 0 ; "" ; 
		#Decode ( Middle ( encodedString ; start ; stringLength ) )
	)

)

/* __________________________________________________

NAME:	#NthValue ( encodedString ; name ; rep )
PURPOSE:	Retrieve the nth matching value from an encoded string (which might be several encoded strings lumped together).
IN:		encodedString (any text to be decoded); name (the name of the value to be return); rep (which instance of name to return).
EXAMPLE:	#NthValue ( "<:CITY:=Oakland:><:CITY:=Cupertino:>" ; "CITY" ; 2 ) = "Cupertino"
HISTORY:	Created:	2012-03-09 19:02 CST - Will M. Baker
		Modified:	
*/